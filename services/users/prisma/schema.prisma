generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/users"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Outbox {
  id         String  @id @default(cuid())
  exchange   String
  routingKey String?
  payload    String
  isSent     Boolean @default(false)

  createdAt DateTime @default(now())

  @@index([isSent, createdAt(sort: Asc)])
}

model User {
  id               String     @id @default(cuid())
  email            String     @unique
  name             String?
  password         String?
  role             SystemRole @default(USER)
  isDrivingEnabled Boolean    @default(false)
  isEmailVerified  Boolean    @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  driverInfos UserDriverInfo[]
  restaurants RestaurantUser[]
}

enum SystemRole {
  ADMIN
  ROOT
  USER
}

model Restaurant {
  id    String           @id @default(cuid())
  users RestaurantUser[]

  createdAt DateTime @default(now())
}

model RestaurantUser {
  restaurantId String
  restaurant   Restaurant     @relation(fields: [restaurantId], references: [id])
  userId       String
  user         User           @relation(fields: [userId], references: [id])
  role         RestaurantRole

  createdAt DateTime @default(now())

  @@id([restaurantId, userId])
}

enum RestaurantRole {
  ADMIN
  OWNER
}

model UserDriverInfo {
  userId        String
  user          User    @relation(fields: [userId], references: [id])
  country       String
  licenceNumber String
  isVerified    Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, country])
}
